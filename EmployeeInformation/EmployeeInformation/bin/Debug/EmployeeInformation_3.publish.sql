/*
Deployment script for EmployeeInformation

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "EmployeeInformation"
:setvar DefaultFilePrefix "EmployeeInformation"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[udfCalaculateSalary]...';


GO
-- =============================================
-- Author:		<Author:Bhushan Divekar>
-- Create date: <Create Date :15/05/2019>
-- Description:	<Description :Calacuate Salary>
-- =============================================
ALTER FUNCTION udfCalaculateSalary 
(
	-- Add the parameters for the function here
	 @FirstName varchar(50),
	 @LastName varchar(50),
	 @Age int,
	 @Length Numeric(4,2)
)
RETURNS Numeric(18,0)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Salary Numeric(18,0)
	DECLARE @Constant int

	-- Add the T-SQL statements to compute the return value here
	
	SET @Constant = (CASE 
						WHEN @Age BETWEEN 15 AND 25 AND @Length BETWEEN 0 AND 1.99 THEN 500
						WHEN @Age BETWEEN 15 AND 25 AND @Length BETWEEN 2 AND 4.99 THEN 1000
						WHEN @Age BETWEEN 15 AND 25 AND @Length BETWEEN 5 AND 8 THEN 1500
						WHEN @Age BETWEEN 26 AND 45 AND @Length BETWEEN 0 AND 1.99 THEN 2000
						WHEN @Age BETWEEN 26 AND 45 AND @Length BETWEEN 2 AND 4.99 THEN 2500
						WHEN @Age BETWEEN 26 AND 45 AND @Length BETWEEN 5 AND 8 THEN 3000
						WHEN @Age BETWEEN 46 AND 65 AND @Length BETWEEN 0 AND 1.99 THEN 3500
						WHEN @Age BETWEEN 46 AND 65 AND @Length BETWEEN 2 AND 4.99 THEN 4000
						WHEN @Age BETWEEN 46 AND 65 AND @Length BETWEEN 5 AND 8 THEN 4500
						WHEN @Age >65 AND  @Length BETWEEN 0 AND 1.99 THEN 5000
						WHEN @Age >65 AND  @Length BETWEEN 2 AND 4.99 THEN 5500
						WHEN @Age >65 AND  @Length BETWEEN 5 AND 8 THEN 6000
						ELSE 4000
					 END
					)
	SELECT @Salary = @Age * @Length * @Constant

	-- Return the result of the function
	RETURN @Salary

END
GO
PRINT N'Altering [dbo].[uspUpdateSalaryInformation]...';


GO
-- =============================================
-- Author:		<Author:Bhushan Divekar>
-- Create date: <Create Date : 15/05/2019>
-- Description:	<Description: Update Salary Information in Emplyee table>
-- =============================================
ALTER PROCEDURE uspUpdateSalaryInformation 
	-- Add the parameters for the stored procedure here
	 @EmployeeId int,@FirstName nvarchar(50),@LastName nvarchar(50),@Salary numeric(18,2)	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Update statements for procedure here
	
	Update Employee
		SET Salary = @Salary 
	Where 
		Id = @EmployeeId  and 
		FirstName=@FirstName and
		LastName=@LastName 

END
GO
PRINT N'Update complete.';


GO
